function [Rec, NLP_reformulation_name] = run_test_all_reformulation()
%UNTITLED8 Summary of this function goes here
%   Detailed explanation goes here

%% OCPEC example to be tested 
OCPEC_func_handle = {...
    @Vieira_LCS_Analytic_1;...
    @Vieira_LCS_Analytic_2;...
    @Vieira_LCS_Rel_Deg_One;...
    @Vieira_LCS_High_Dim;...
    @Vieira_LCS_Without_Penalty;...
    @Vieira_LCS_With_Penalty_1;...
    @Vieira_LCS_With_Penalty_2;...
    @Vieira_LCS_With_Penalty_3;...
    @Vieira_LCS_Control_Jump;...
    @Vieira_LCS_State_Jump_1;...
    @Vieira_LCS_State_Jump_2};

nStages_sequ = {50, 80, 100, 200, 250, 400};

%% relaxed NLP reformulation to be tested
NLP_option_set_KKT = {...
    struct('relaxation_problem', 'KKT_based',...
    'KKT_complementarity_relaxation_strategy', 'Scholtes'),...
    struct('relaxation_problem', 'KKT_based',...
    'KKT_complementarity_relaxation_strategy', 'Lin_Fukushima'),...
    struct('relaxation_problem', 'KKT_based',...
    'KKT_complementarity_relaxation_strategy', 'Kadrani')...
    };
NLP_option_set_primal = {...
    struct('relaxation_problem', 'gap_constraint_based',...
    'gap_constraint_relaxation_strategy', 'generalized_primal_gap',...
    'gap_func_smooth_param', 0),...  
    struct('relaxation_problem', 'gap_constraint_based',...
    'gap_constraint_relaxation_strategy', 'generalized_primal_gap',...
    'gap_func_smooth_param', 1e-4)... 
    };
NLP_option_set_D = {...
    struct('relaxation_problem', 'gap_constraint_based',...
    'gap_constraint_relaxation_strategy', 'generalized_D_gap',...
    'gap_func_smooth_param', 0,...
    'D_gap_param_a', 0.1, 'D_gap_param_b',10),...
    struct('relaxation_problem', 'gap_constraint_based',...
    'gap_constraint_relaxation_strategy', 'generalized_D_gap',...
    'gap_func_smooth_param', 1e-4,...
    'D_gap_param_a', 0.1, 'D_gap_param_b',10),...
    };

NLP_option_set = [...
    NLP_option_set_KKT,...
    NLP_option_set_primal,...
    NLP_option_set_D];
NLP_reformulation_name = {'KKT (Scholtes)', 'KKT (Lin-Fuku)', 'KKT (Kadrani)', ...
    'Gap (primal, \epsilon = 0)', 'Gap (primal, \epsilon = 1e-4)',...
    'Gap (D, \epsilon = 0, a = 0.1, b = 10)', 'Gap (D, \epsilon = 1e-4, a = 0.1, b = 10)'};

%% solver option set
VI_nat_res_tol = 1e-3;

solver_Option_set = {...
    struct('kappa_s_times', 1e-2, 'VI_nat_res_tol', VI_nat_res_tol),... % KKT (Scholtes)
    struct('kappa_s_times', 1e-1, 'VI_nat_res_tol', VI_nat_res_tol),... % KKT (Lin-Fuku)
    struct('kappa_s_times', 1e-1, 'VI_nat_res_tol', VI_nat_res_tol),... % KKT (Kadrani)
    struct('kappa_s_times', 1e-2, 'VI_nat_res_tol', VI_nat_res_tol),... % Gap (primal, \epsilon = 0)
    struct('kappa_s_times', 1e-2, 'VI_nat_res_tol', VI_nat_res_tol),... % Gap (primal, \epsilon = 1e-4)
    struct('kappa_s_times', 1e-2, 'VI_nat_res_tol', VI_nat_res_tol),... % Gap (D, \epsilon = 0)
    struct('kappa_s_times', 1e-2, 'VI_nat_res_tol', VI_nat_res_tol)... % Gap (D, \epsilon = 1e-4)
    };

%% generate solver set
solver_set = create_solver_set(OCPEC_func_handle, nStages_sequ, NLP_option_set, solver_Option_set);

%% run test
% parameter
s_End = 1e-16;
p_Init_D_gap_a_01_b_10 = 1 - (0.1)/2 - 1/(2*10);
param_set = {...
    struct('p_Init', 1, 'p_End', s_End),...% KKT (Scholtes)
    struct('p_Init', 1, 'p_End', s_End),...% KKT (Lin-Fuku)
    struct('p_Init', 1, 'p_End', s_End),...% KKT (Kadrani)
    struct('p_Init', 0.5, 'p_End', s_End),...% Gap (primal, \epsilon = 0)
    struct('p_Init', 0.5, 'p_End', s_End),...% Gap (primal, \epsilon = 1e-4)
    struct('p_Init', p_Init_D_gap_a_01_b_10, 'p_End', s_End),...% Gap (D, \epsilon = 0), s_Init = 1 - a/2 - 1/(2b)
    struct('p_Init', p_Init_D_gap_a_01_b_10, 'p_End', s_End)...% Gap (D, \epsilon = 1e-4), s_Init = 1 - a/2 - 1/(2b)
    };
% solve
Rec = run_solver_test(solver_set, param_set);

end